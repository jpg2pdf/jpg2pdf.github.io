{"version":3,"sources":["contexts/theme.js","config.js","components/Navbar/Navbar.js","components/Header/Header.js","components/About/About.js","components/Jpg2Pdf/Jpg2Pdf.js","components/Tags/Tags.js","components/ScrollToTop/ScrollToTop.js","components/Contact/Contact.js","components/Footer/Footer.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","_ref","children","themeName","setThemeName","useState","useEffect","darkMediaQuery","window","matchMedia","matches","addEventListener","e","_jsx","Provider","value","toggleTheme","name","localStorage","setItem","header","homepage","title","about","heading","tags","contact","Navbar","useContext","showNavList","setShowNavList","_jsxs","className","style","display","href","onClick","toggleNavList","type","WbSunnyRoundedIcon","Brightness2Icon","Header","About","CustomImage","Image","constructor","mimeType","super","this","imageType","split","fileToImageURL","file","Promise","resolve","reject","image","onload","onerror","Error","src","URL","createObjectURL","A4_PAPER_DIMENSIONS","A4_PAPER_RATIO","generatePdfFromImages","images","doc","jsPDF","deletePage","forEach","imageDimensions","dimensions","width","height","imageRatio","imageScaleFactor","scaledImageHeight","imageDimensionsOnA4","addPage","addImage","pdfURL","output","open","Jpg2Pdf","uploadedImages","setUploadedImages","cleanUpUploadedImages","revokeObjectURL","_Fragment","length","map","alt","disabled","htmlFor","id","accept","onChange","event","fileList","target","files","fileToImagePromises","Array","from","all","then","combinedImages","concat","multiple","handleGeneratePdfFromImages","async","charset","Tags","tag","uniqid","ScrollToTop","isVisible","setIsVisible","toggleVisibility","pageYOffset","removeEventListener","ArrowUpwardIcon","fontSize","Contact","Footer","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f604377.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ThemeContext = createContext()\n\nconst ThemeProvider = ({ children }) => {\n  const [themeName, setThemeName] = useState('light')\n\n  useEffect(() => {\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light')\n    darkMediaQuery.addEventListener('change', (e) => {\n      setThemeName(e.matches ? 'dark' : 'light')\n    });\n  }, [])\n\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark'\n    localStorage.setItem('themeName', name)\n    setThemeName(name)\n  }\n\n  return (\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport { ThemeProvider, ThemeContext }\n","const header = {\n  // all the properties are optional - can be left empty or deleted\n  homepage: 'https://jpg2pdf.github.io/',\n  title: 'JPG to PDF',\n}\n\nconst about = {\n  // all the properties are optional - can be left empty or deleted\n  heading: '',\n}\n\nconst tags = [\n  // skills can be added or removed\n  // if there are no skills, Skills section won't show up\n  'JPG',\n  'Converter',\n  'PDF',\n  'JPEG',\n  'Tools',\n]\n\nconst contact = {\n  // email is optional - if left empty Contact section won't show up\n  email: '',\n}\n\nexport { header, about, tags, contact }\n","import { useContext, useState } from 'react'\nimport Brightness2Icon from '@material-ui/icons/Brightness2'\nimport WbSunnyRoundedIcon from '@material-ui/icons/WbSunnyRounded'\n// import MenuIcon from '@material-ui/icons/Menu'\n// import CloseIcon from '@material-ui/icons/Close'\nimport { ThemeContext } from '../../contexts/theme'\nimport { contact } from '../../config'\nimport './Navbar.css'\n\nconst Navbar = () => {\n  const [{ themeName, toggleTheme }] = useContext(ThemeContext)\n  const [showNavList, setShowNavList] = useState(false)\n\n  const toggleNavList = () => setShowNavList(!showNavList)\n\n  return (\n    <nav className='center nav'>\n      <ul\n        style={{ display: showNavList ? 'flex' : null }}\n        className='nav__list'\n      >\n\n        {contact.email ? (\n          <li className='nav__list-item'>\n            <a\n              href='#contact'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Contact\n            </a>\n          </li>\n        ) : null}\n      </ul>\n\n      <button\n        type='button'\n        onClick={toggleTheme}\n        className='btn btn--icon nav__theme'\n        aria-label='toggle theme'\n      >\n        {themeName === 'dark' ? <WbSunnyRoundedIcon /> : <Brightness2Icon />}\n      </button>\n      {/* <button\n        type='button'\n        onClick={toggleNavList}\n        className='btn btn--icon nav__hamburger'\n        aria-label='toggle navigation'\n      >\n        {showNavList ? <CloseIcon /> : <MenuIcon />}\n      </button> */}\n    </nav>\n  )\n}\n\nexport default Navbar\n","import { header } from '../../config'\nimport Navbar from '../Navbar/Navbar'\nimport './Header.css'\n\nconst Header = () => {\n  const { homepage, title } = header\n\n  return (\n    <header className='header center'>\n      <h1>\n        {homepage ? (\n          <a href={homepage} className='link'>\n            {title}\n          </a>\n        ) : (\n          title\n        )}\n      </h1>\n      <Navbar />\n    </header>\n  )\n}\n\nexport default Header\n","import { about } from '../../config'\nimport './About.css'\n\nconst About = () => {\n  const { heading } = about\n\n  return (\n    <div className='about center'>\n      {heading && (\n        <h1>\n          {heading}\n        </h1>\n      )}\n    </div>\n  )\n}\n\nexport default About\n","/* eslint-disable */\nimport React, { useState } from \"react\";\nimport jsPDF from \"jspdf\";\n\nimport \"./Jpg2Pdf.css\";\n\n// New class with additional fields for Image\nclass CustomImage extends Image {\n  constructor(mimeType) {\n    super();\n    this.mimeType = mimeType;\n  }\n\n  // `imageType` is a required input for generating a PDF for an image.\n  get imageType(){\n    return this.mimeType.split(\"/\")[1];\n  }\n};\n\n// Each image is loaded and an object URL is created.\nconst fileToImageURL = (file) => {\n  return new Promise((resolve, reject) => {\n    const image = new CustomImage(file.type);\n\n    image.onload = () => {\n      resolve(image);\n    };\n\n    image.onerror = () => {\n      reject(new Error(\"Failed to convert File to Image\"));\n    };\n\n    image.src = URL.createObjectURL(file);\n  });\n};\n\n// The dimensions are in millimeters.\nconst A4_PAPER_DIMENSIONS = {\n  width: 210,\n  height: 297,\n};\n\nconst A4_PAPER_RATIO = A4_PAPER_DIMENSIONS.width / A4_PAPER_DIMENSIONS.height;\n\n// Calculates the best possible position of an image on the A4 paper format,\n// so that the maximal area of A4 is used and the image ratio is preserved.\nconst imageDimensionsOnA4 = (dimensions) => {\n  const isLandscapeImage = dimensions.width >= dimensions.height;\n\n  // If the image is in landscape, the full width of A4 is used.\n  if (isLandscapeImage) {\n    return {\n      width: A4_PAPER_DIMENSIONS.width,\n      height:\n        A4_PAPER_DIMENSIONS.width / (dimensions.width / dimensions.height),\n    };\n  }\n\n  // If the image is in portrait and the full height of A4 would skew\n  // the image ratio, we scale the image dimensions.\n  const imageRatio = dimensions.width / dimensions.height;\n  if (imageRatio > A4_PAPER_RATIO) {\n    const imageScaleFactor =\n      (A4_PAPER_RATIO * dimensions.height) / dimensions.width;\n\n    const scaledImageHeight = A4_PAPER_DIMENSIONS.height * imageScaleFactor;\n\n    return {\n      height: scaledImageHeight,\n      width: scaledImageHeight * imageRatio,\n    };\n  }\n\n  // The full height of A4 can be used without skewing the image ratio.\n  return {\n    width: A4_PAPER_DIMENSIONS.height / (dimensions.height / dimensions.width),\n    height: A4_PAPER_DIMENSIONS.height,\n  };\n};\n\n// Creates a PDF document containing all the uploaded images.\nconst generatePdfFromImages = (images) => {\n  // Default export is A4 paper, portrait, using millimeters for units.\n  const doc = new jsPDF();\n\n  // We let the images add all pages,\n  // therefore the first default page can be removed.\n  doc.deletePage(1);\n\n  images.forEach((image) => {\n    const imageDimensions = imageDimensionsOnA4({\n      width: image.width,\n      height: image.height,\n    });\n\n    doc.addPage();\n    doc.addImage(\n      image.src,\n      image.imageType,\n      // Images are vertically and horizontally centered on the page.\n      (A4_PAPER_DIMENSIONS.width - imageDimensions.width) / 2,\n      (A4_PAPER_DIMENSIONS.height - imageDimensions.height) / 2,\n      imageDimensions.width,\n      imageDimensions.height\n    );\n  });\n\n  // Creates a PDF and opens it in a new browser tab.\n  const pdfURL = doc.output(\"bloburl\");\n  window.open(pdfURL, \"_blank\");\n};\n\nfunction Jpg2Pdf() {\n  // State for uploaded images\n  const [uploadedImages, setUploadedImages] = useState([]);\n\n  const handleImageUpload = (event) => {\n      // `event.target.files` is of type `FileList`,\n      // we convert it to Array for easier manipulation.\n      const fileList = event.target.files;\n      const fileArray = fileList ? Array.from(fileList) : [];\n\n      // Uploaded images are read and the app state is updated.\n      const fileToImagePromises = fileArray.map(fileToImageURL);\n      Promise.all(fileToImagePromises).then((images) => {\n        const combinedImages = uploadedImages.concat(images);\n        setUploadedImages(combinedImages);\n      });\n  };\n\n  const cleanUpUploadedImages = () => {\n    setUploadedImages([]);\n    uploadedImages.forEach((image) => {\n      // The URL.revokeObjectURL() releases an existing object URL\n      // which was previously created by URL.createObjectURL().\n      // It lets the browser know not to keep the reference to the file any longer.\n      URL.revokeObjectURL(image.src);\n    });\n  };\n\n  const handleGeneratePdfFromImages = () => {\n    generatePdfFromImages(uploadedImages);\n    cleanUpUploadedImages();\n  };\n\n  return (\n    <>\n      <h1 className=\"h1main\">JPG to PDF Free Converter</h1>\n      {/* Overview of uploaded images */}\n      <div className=\"images-container\">\n        {uploadedImages.length > 0 ? (\n          uploadedImages.map((image) => (\n            <img alt=\"Uploaded Images\" key={image.src} src={image.src} className=\"uploaded-image\" />\n          ))\n        ) : (\n          <p>Upload some images...</p>\n        )}\n      </div>\n\n      {/* Buttons for uploading images and generating a PDF */}\n      <div className=\"buttons-container\">\n        {/* Clears images */}\n        <button\n          onClick={cleanUpUploadedImages}\n          className=\"button\"\n          disabled={uploadedImages.length === 0}\n        >\n          Clear\n        </button>\n\n        {/* Uploads images */}\n        <label htmlFor=\"file-input\">\n          <span className=\"button\">Add</span>\n          <input\n            id=\"file-input\"\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={handleImageUpload}\n            // Native file input is hidden only for styling purposes\n            style={{ display: \"none\" }}\n            multiple\n          />\n        </label>\n\n        {/* Generates PDF */}\n        <button\n          onClick={handleGeneratePdfFromImages}\n          className=\"button\"\n          disabled={uploadedImages.length === 0}\n        >\n          Generate\n        </button>\n      </div>\n      <br/>\n      <div>\n        <p>Meet our easy-to-use JPG to PDF Conversion Tool Jpg2Pdf your solution for turning JPEG images into PDFs effortlessly. Our online tool is simple and quick, making the conversion process a breeze. Enjoy a smooth experience with a user-friendly interface. Upgrade your document management with our tool designed for speed and accuracy. Convert confidently and showcase your documents in a whole new way.</p>\n      </div>\n      <br/>\n      <a href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\" className=\"twitter-share-button\" data-show-count=\"false\" target=\"_blank\">Tweet</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n    </>\n  );\n}\n\nexport default Jpg2Pdf;","import uniqid from 'uniqid'\nimport { tags } from '../../config'\nimport './Tags.css'\n\nconst Tags = () => {\n  if (!tags.length) return null\n\n  return (\n    <section className='section tags' id='tags'>\n      <ul className='tags__list'>\n        {tags.map((tag) => (\n          <li key={uniqid()} className='tags__list-item btn btn--plain'>\n            {tag}\n          </li>\n        ))}\n      </ul>\n    </section>\n  )\n}\n\nexport default Tags\n","import React, { useEffect, useState } from 'react'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport './ScrollToTop.css'\n\nconst ScrollToTop = () => {\n  const [isVisible, setIsVisible] = useState(false)\n\n  useEffect(() => {\n    const toggleVisibility = () =>\n      window.pageYOffset > 500 ? setIsVisible(true) : setIsVisible(false)\n\n    window.addEventListener('scroll', toggleVisibility)\n    return () => window.removeEventListener('scroll', toggleVisibility)\n  }, [])\n\n  return isVisible ? (\n    <div className='scroll-top'>\n      <a href='#top'>\n        <ArrowUpwardIcon fontSize='large' />\n      </a>\n    </div>\n  ) : null\n}\n\nexport default ScrollToTop\n","import { contact } from '../../config'\nimport './Contact.css'\n\nconst Contact = () => {\n  if (!contact.email) return null\n\n  return (\n    <section className='section contact center' id='contact'>\n      <h2 className='section__title'>Contact</h2>\n      <a href={`mailto:${contact.email}`}>\n        <span type='button' className='btn btn--outline'>\n          Email me\n        </span>\n      </a>\n    </section>\n  )\n}\n\nexport default Contact\n","import './Footer.css'\n\nconst Footer = () => (\n  <footer className='footer'>\n    <a\n      href='https://github.com/limitpointinf0'\n      className='link footer__link'\n    >\n      Created By Limitpointinf0\n    </a>\n  </footer>\n)\n\nexport default Footer\n","import { useContext } from 'react'\nimport { ThemeContext } from './contexts/theme'\nimport Header from './components/Header/Header'\nimport About from './components/About/About'\nimport Jpg2Pdf from './components/Jpg2Pdf/Jpg2Pdf'\nimport Tags from './components/Tags/Tags'\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop'\nimport Contact from './components/Contact/Contact'\nimport Footer from './components/Footer/Footer'\nimport './App.css'\n\nconst App = () => {\n  const [{ themeName }] = useContext(ThemeContext)\n\n  return (\n    <div id='top' className={`${themeName} app`}>\n      <Header />\n\n      <main>\n        <About />\n        <Jpg2Pdf />\n        <Tags />\n        <Contact />\n      </main>\n\n      <ScrollToTop />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import { render } from 'react-dom'\nimport App from './App'\nimport { ThemeProvider } from './contexts/theme'\nimport './index.css'\n\nrender(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}